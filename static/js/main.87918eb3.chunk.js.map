{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","some","tab","id","length","className","map","cn","href","onClick","title","find","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"8NAEaA,EAAO,SAAC,GAId,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAUA,OARmBF,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,MAE5BD,EAAKM,OAAS,IAE/BL,EAAgBD,EAAK,GAAGK,GACxBH,EAAcF,EAAK,KAInB,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAJ,GAAG,OACX,oBAEEG,UAAWE,IAAG,GAAI,CAChB,YAAaR,IAAkBG,EAAIC,KAErC,UAAQ,MALV,SAOE,mBACEK,KAAI,WAAMN,EAAIC,IACd,UAAQ,UACRM,QAAS,WACHV,IAAkBG,EAAIC,IACxBH,EAAcE,IALpB,SASGA,EAAIQ,SAfFR,EAAIC,WAsBjB,qBACEE,UAAU,QACV,UAAQ,aAFV,mBAIGP,EAAKa,MAAK,SAAAT,GAAG,OAAIA,EAAIC,KAAOJ,YAJ/B,aAIG,EAA4Ca,cCxCxCd,EAAO,CAClB,CAAEK,GAAI,QAASO,MAAO,QAASE,QAAS,eACxC,CAAET,GAAI,QAASO,MAAO,QAASE,QAAS,eACxC,CAAET,GAAI,QAASO,MAAO,QAASE,QAAS,gBAG7BC,EAAM,WAAO,IAAD,EACvB,EAA0CC,mBAAShB,EAAK,GAAGK,IAA3D,mBAAOJ,EAAP,KAAsBgB,EAAtB,KAKA,OACE,sBAAKV,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IAFH,UAGGP,EAAKa,MAAK,SAAAT,GAAG,OAAIA,EAAIC,KAAOJ,YAH/B,aAGG,EAA4CW,SAG/C,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAAeA,EACfC,cAfoB,SAACE,GACzBa,EAAiBb,EAAIC,WCbzBa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.87918eb3.chunk.js","sourcesContent":["import cn from 'classnames';\n\nexport const Tabs = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const isTabExist = tabs.some(tab => tab.id === selectedTabId);\n\n  if (!isTabExist && tabs.length > 0) {\n    // eslint-disable-next-line no-param-reassign\n    selectedTabId = tabs[0].id;\n    onTabSelected(tabs[0]);\n  }\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={cn('', {\n                'is-active': selectedTabId === tab.id,\n              })}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (selectedTabId !== tab.id) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div\n        className=\"block\"\n        data-cy=\"TabContent\"\n      >\n        {tabs.find(tab => tab.id === selectedTabId)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const handleTabSelected = (tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {tabs.find(tab => tab.id === selectedTabId)?.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}